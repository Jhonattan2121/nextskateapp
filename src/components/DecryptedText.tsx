import React, { useEffect, useState } from "react";

const letters = `
FUCKсѓб­ЪЏ╣­ЪЏ╣сѓцсѓдсѓесѓфсѓФсѓГсѓ»рџа рџА рџб рџБ рџц рџЦ рџд рџД рџе рџЕ рџф рџФ рџг рџГ рџ« рџ» рџ░
рџ▒ рџ▓ рџ│ рџ┤ рџх рџХ рџи рџИ рџ╣ рџ║ рџ╗ рџ╝ рџй рџЙ рџ┐ рЏђ рЏЂ рЏѓ рЏЃ рЏё рЏЁ рЏє рЏЄ рЏѕ рЏЅ рЏі
рЏІ рЏї рЏЇ рЏј рЏЈ рЏљ рЏЉ рЏњ рЏЊ рЏћ рЏЋ рЏќ рЏЌ рЏў рЏЎ рЏџ рЏЏ рЏю рЏЮ рЏъ рЏЪ рЏа рЏА рЏбрЏБ
рЏц рЏЦ рЏд рЏД рЏе ­ЪЏ╣­ЪЏ╣рЏЕ рЏф рЏФ рЏг рЏГ рЏ« рЏ» рЏ░ ­љїю ­љїў ­љїъ ­љїЄсѓ▒сѓ│сѓхсѓисѓ╣сѓ╗­ЪЏ╣­ЪЏ╣сѓй
сѓ┐сЃЂсЃёсЃєсЃѕсЃісЃІ­ЪЏ╣­ЪЏ╣FUCKсЃїсЃЇсЃј­ЪЏ╣­ЪЏ╣┬»\_(сЃё)_/┬» `;

const DecryptedText: React.FC<{ text: string }> = ({ text }) => {
    const [displayedText, setDisplayedText] = useState(text);

    useEffect(() => {
        let iteration = 0;
        const interval = setInterval(() => {
            setDisplayedText((prev) =>
                prev
                    .split("")
                    .map((char, index) => {
                        if (index < iteration) return text[index];
                        return letters[Math.floor(Math.random() * letters.length)];
                    })
                    .join("")
            );

            if (iteration >= text.length) clearInterval(interval);
            iteration += 1; // Increased increment for faster animation
        }, 10); // Reduced interval delay for faster animation

        return () => clearInterval(interval);
    }, [text]);

    return <span>{displayedText}</span>;
};

export default DecryptedText;
